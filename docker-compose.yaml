version: '2.1'

networks:
  shared-network:
    driver: bridge

services:

  service_1_db:
    container_name: service_1_db
    networks:
      - shared-network
    image: postgres:11.1-alpine
    environment:
      POSTGRES_DB: cookie
    volumes:
      - db:/var/lib/mysql
    ports:
      - 5431:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  service_2_db:
    container_name: service_2_db
    networks:
      - shared-network
    image: postgres:11.1-alpine
    environment:
      POSTGRES_DB: cookie
    volumes:
      - db:/var/lib/mysql
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  service_1:
    container_name: service_1
    networks:
      - shared-network
    build:
      context: .
      dockerfile: Service1.Dockerfile
    ports:
      - 3000:3000
    depends_on:
      service_1_db:
        condition: service_healthy

  service_2:
    container_name: service_2
    networks:
      - shared-network
    build:
      context: .
      dockerfile: Service2.Dockerfile
    ports:
      - 4000:4000
    depends_on:
      service_2_db:
        condition: service_healthy

  customer_service:
    container_name: customer_service
    networks:
      - shared-network
    build:
      context: .
      dockerfile: CustomerService.Dockerfile
    ports:
      - 5000:5000

volumes:
  db:
    driver: "local"